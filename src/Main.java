/*
javaについて
どんなコンピュータでも使えると言われている理由は？？
→JVM（Java Virtual Machine：Java仮想マシン）で動いていて、色々なOSに対応できるから。
　他のプログラムはだとその言語専用の通訳さんみたいなのが必要で都度用意する必要があるし、その分容量も大きくなってしまうけれど
　javaの場合は、最初からそれがセットになっているみたいな感じらしい。
　流れのイメージとしては、
　javaのソースコード　→コンパイル（翻訳）→　クラスファイル（バイトコード）→バイトコードをそれぞれのOS向けに更に翻訳　→読み込んで実行。
　ざっくりだけども、クラスファイルを挟んで翻訳の翻訳をすることでいろんなコンピュータに対応できるらしい。　

実行までの流れ、ソースコードを記述→ コンパイル→ 実行
・ソースコードとは？
　言語の定める決まりに沿って人が書いたプログラムのコード
　ソースとも言う。ソースを書いたファイルは、ソースファイル。

・コンパイルとは？
　人が書いたコードをコンピュータ側が分かるように翻訳する処理
　javaのソースファイルをコンパイルすると出来るファイルは、classファイル。
　javaクラスファイルとも言う。中身は０１で構成されたコンピュータが読める言葉。
　javaの場合は、バイトコード。
　※バイトコード　と　バイナリコード　の違い
　　バイトコード　＝　javaなどの仮想マシンで実行する中間コード。
　　バイナリコード　＝　機械語や画像等のデータ
　　バイナリーコードの分類の中に、バイトコードがある
　　パスタとスパゲッティみたいな関係らしい…。
　　ただ、調べた限り割と曖昧でバイトコードはjavaバージョンのバイナリコードだよと言ってる記事もあった。
 */


//　public class ○○←この部分をclass名という。頭文字を大文字のアルファベットにするのが一般的な書き方らしい。
//クラス名は、○○.javaファイルと作成した時の○○がそのまま入ってくる。
//{}に囲まれた部分を【ブロック】と呼ぶ
//２構造になっていて、
// 外側の　public static void main(String[] args)  {}波かっこの部分をclassブロック
// 内側にある処理内容を記入をする部分は、methodブロックと呼ばれる.
// ソースコードでmainと記述されているから、mainメゾットと呼ばれることもある。

public class Main {
    public static void main(String[] args) {
        System.out.println("文字を出力してみよう！！");
    }
}
//mainメゾットの中には、処理内容の文（statement）を記入していく。
//実行される順番はrubyの時と一緒で上から下へ
//文末には必ず;(セミコロン)をつける。rubyのendみたいな感じらしい…